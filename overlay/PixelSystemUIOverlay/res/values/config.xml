<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (C) 2020 Paranoid Android

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->
<resources>

    <!-- Screenshot editing default activity.  Must handle ACTION_EDIT image/png intents.
         Blank sends the user to the Chooser first.
         This name is in the ComponentName flattened format (package/class)  -->
    <string name="config_screenshotEditor">com.google.android.markup/com.google.android.markup.AnnotateActivity</string>

    <!-- Comma-separated list of packages to exclude from camera protection e.g.
    "com.android.systemui,com.android.xyz" -->
    <string translatable="false" name="config_cameraProtectionExcludedPackages">com.google.android.as</string>

    <!-- The default tiles to display in QuickSettings -->
    <string name="quick_settings_tiles_default" translatable="false">
        internet,bt,flashlight,dnd,alarm,airplane,controls,wallet,rotation,qr_code_scanner,battery,cast,screenrecord,custom(com.google.android.gms/.nearby.sharing.SharingTileService),mictoggle,cameratoggle,custom(com.google.android.permissioncontroller/com.android.permissioncontroller.permission.service.SafetyCenterQsTileService)
    </string>

    <!-- Remote Copy default activity -->
    <string name="config_remoteCopyPackage">com.google.android.gms/.nearby.sharing.RemoteCopyShareSheetActivity</string>

    <!-- ComponentName for the file browsing app that the system would expect to be used in work
         profile. The icon for this app will be shown to the user when informing them that a
         screenshot has been saved to work profile. If blank, a default icon will be shown. -->
    <string name="config_sceenshotWorkProfileFilesApp">com.google.android.apps.nbu.files/com.google.android.apps.nbu.files.home.HomeActivity</string>

    <!-- URI for default Accessibility notification sound when to enable accessibility shortcut. -->
    <string name="config_defaultAccessibilityNotificationSound" translatable="false">Effect_Tick.ogg</string>

    <!-- The component name, flattened to a string, for the system's credential manager
      hybrid service. This service allows credential retrieval and storage from, and to
      remote devices.
     This service must be trusted, as it can be activated without explicit consent of the user.
     If no service with the specified name exists on the device, credential manager
     will still work, but remote credential retrieval and storage will not be offered to
     the user.
     See android.credentials.CredentialManager
    -->
    <string name="config_defaultCredentialManagerHybridService" translatable="false">com.google.android.gms/.auth.api.credentials.credman.service.RemoteService</string>

    <!-- Package name of Health Connect data migrator application.  -->
    <string name="config_healthConnectMigratorPackageName" translatable="false">com.google.android.apps.healthdata</string>

    <!-- The name of the package that will hold the call streaming role. -->
    <string name="config_systemCallStreaming" translatable="false">com.google.android.gms</string>

    <!-- The component name(s), flattened to a string, for the system's credential manager
      provider services. These services allow retrieving and storing credentials.
     These services must be trusted, as they can be activated without explicit consent of the user.
     If no service with the specified name exists on the device, there will be no user configurable
     provider to service credential manager requests. However, credential manager system
     services that do not require user consent, will still work.
     See android.credentials.CredentialManager
    -->
    <string-array name="config_enabledCredentialProviderService" translatable="false">
        <item>com.google.android.gms/.auth.api.credentials.credman.service.PasswordAndPasskeyService</item>
    </string-array>

    <!-- The component name(s), flattened to a string, for the system's primary credential manager
      provider services. These service will be used by default for storing credentials.
     These services must be trusted, as they can be activated without explicit consent of the user.
     See android.credentials.CredentialManager
    -->
    <string-array name="config_primaryCredentialProviderService" translatable="false">
        <item>com.google.android.gms/.auth.api.credentials.credman.service.PasswordAndPasskeyService</item>
    </string-array>

    <!-- Certificate digests for trusted apps that will be allowed to obtain the knownSigner
         permission for staging HealthConnect's remote data. The digest should be computed over the
         DER encoding of the trusted certificate using the SHA-256 digest algorithm. -->
    <string-array name="config_healthConnectRestoreKnownSigners" translatable="false">
        <item>56BE132B780656FE2444CD34326EB5D7AAC91D2096ABF0FE673A99270622EC87</item>
    </string-array>

    <!-- Certificate digests for trusted apps that will be allowed to obtain the knownSigner Health
        Connect Migration permissions. The digest should be computed over the DER encoding of the
        trusted certificate using the SHA-256 digest algorithm. -->
    <string-array name="config_healthConnectMigrationKnownSigners" translatable="false">
        <item>B2C0A80E485934BFB08F902CA27505813DF3159E4E6DD4A4DF078D66CB1C2003</item>
    </string-array>



</resources>
